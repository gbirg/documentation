<?xml version="1.0" encoding="UTF-8"?>
<!--
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
		<sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
			<sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
				<section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
				<sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
					<section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere" />
					<section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
					<section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
					<section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
				</sectionGroup>
			</sectionGroup>
		</sectionGroup>
		<!-- START - Microsoft.IdentityModel reference -->
		<section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
		<!-- END - Microsoft.IdentityModel reference -->
		<!-- START - Certificates web config reference -->
		<section name="peppol.certificates" type="STARTLibrary.src.eu.peppol.start.security.configuration.CertificatesConfigurationSection, STARTLibrary" />
		<!-- END - Certificates web config reference -->
	</configSections>
	<!-- START - Stacktrace log -->
	<system.diagnostics>
		<sources>
			<source name="System.ServiceModel.MessageLogging" switchValue="Warning, ActivityTracing">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default">
						<filter type="" />
					</add>
					<add name="ServiceModelMessageLoggingListener">
						<filter type="" />
					</add>
				</listeners>
			</source>
			<source name="System.ServiceModel" switchValue="Warning, ActivityTracing">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default">
						<filter type="" />
					</add>
					<add name="ServiceModelTraceListener">
						<filter type="" />
					</add>
				</listeners>
			</source>
		</sources>
		<sharedListeners>
			<add initializeData="app_messages_iis.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
				<filter type="" />
			</add>
			<add initializeData="web_tracelog.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
				<filter type="" />
			</add>
		</sharedListeners>
		<trace autoflush="true">
			<listeners>
				<add name="fileLogger" type="System.Diagnostics.TextWriterTraceListener" initializeData="app_trace.log" />
				<remove name="Default" />
			</listeners>
		</trace>
	</system.diagnostics>
	<!-- END - Stacktrace log -->
	<!-- START - Certificates and variables reference -->
	<appSettings>
    <add key="AssuranceLevel" value="3" />
		<add key="smlDomain" value="sml.peppolcentral.org" />
	</appSettings>
	<!-- END - Certificates and variables reference -->
	<connectionStrings />

	<system.web>
		<!--
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="true">
			<assemblies>
				<add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
				<add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
			</assemblies>
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Windows" />
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages>
			<controls>
				<add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
			</controls>
		</pages>
		<httpHandlers>
			<remove verb="*" path="*.asmx" />
			<add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
			<add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
			<add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false" />
		</httpHandlers>
		<httpModules>
			<add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
		</httpModules>
	</system.web>
	<system.codedom>
		<compilers>
			<compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
				<providerOption name="CompilerVersion" value="v3.5" />
				<providerOption name="WarnAsError" value="false" />
			</compiler>
		</compilers>
	</system.codedom>

	<system.web.extensions>
		<scripting>
			<webServices>
				<!--
              Uncomment this section to enable the authentication service. Include 
              requireSSL="true" if appropriate.

          <authenticationService enabled="true" requireSSL = "true|false"/>
          -->
				<!--
              Uncomment these lines to enable the profile service, and to choose the 
              profile properties that can be retrieved and modified in ASP.NET AJAX 
              applications.

          <profileService enabled="true"
                          readAccessProperties="propertyname1,propertyname2"
                          writeAccessProperties="propertyname1,propertyname2" />
          -->
				<!--
              Uncomment this section to enable the role service.

          <roleService enabled="true"/>
          -->
			</webServices>
			<!--
        <scriptResourceHandler enableCompression="true" enableCaching="true" />
        -->
		</scripting>
	</system.web.extensions>

	<system.webServer>
		<validation validateIntegratedModeConfiguration="false" />
		<modules>
			<add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
		</modules>
		<handlers>
			<remove name="WebServiceHandlerFactory-Integrated" />
			<add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
			<add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
			<add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
		</handlers>
        <directoryBrowse enabled="true" />
	</system.webServer>

	<system.serviceModel>
		<!-- START - Message Logging -->
		<diagnostics>
			<messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
		</diagnostics>
		<!-- END - Message Logging -->
		<!-- START - Client configuration -->
		<client>
			<endpoint name="SecurePeppolClient" address="https://192.168.1.40:443/start-ap/accesspointService.svc" behaviorConfiguration="SecureClientBehavior" binding="customBinding" bindingConfiguration="SecureServiceBinding" contract="STARTLibrary.accesspointService.Resource">
			</endpoint>
		</client>
		<!-- END - Client configuration -->

		<services>
			<service name="STARTAccessPoint.accesspointService" behaviorConfiguration="SecureServiceBehavior">
				<!-- START - Service Endpoints - Use: ResourceBindingPort for interoperability -->
				<!-- Change bindingConfiguration when needed "<name="ResourceBindingPort">" -->				
				<endpoint address="" name="ResourceBindingPort" binding="customBinding" bindingNamespace="http://www.w3.org/2009/02/ws-tra" bindingConfiguration="SecureServiceBinding" contract="STARTAccessPoint.Resource">
					<identity>
						<certificate encodedValue="" />
					</identity>
				</endpoint>
			</service>
		</services>
    
    <behaviors>
			<serviceBehaviors>
				<!--HTTPS-->
				<behavior name="SecureServiceBehavior">
					<serviceMetadata httpsGetEnabled="true" externalMetadataLocation="https://192.168.1.40:443/start-ap/accesspointService.wsdl.xml" />
          <!--<serviceMetadata httpGetEnabled="true" />-->
          <serviceDebug includeExceptionDetailInFaults="true" />					
				</behavior>
			</serviceBehaviors>
			<!-- START - Behavior for the client -->
			<!-- Secure or unsecure, always needs certificates -->
			<endpointBehaviors>
				<behavior name="SecureClientBehavior">
					<!-- The certificate validator is now assigned in code - so that we can keep track of
					different expected subject unique identifiers for different calls. -->
				</behavior>
			</endpointBehaviors>
			<!-- END - Behavior for the client -->
		</behaviors>
		<!-- END - behaviors -->

		<!-- START - bindings -->
		<bindings>
			<customBinding>
				<!-- START customBinding - HTTPS -->
				<binding name="SecureServiceBinding" closeTimeout="00:01:30" openTimeout="00:01:30" sendTimeout="00:01:30" receiveTimeout="00:01:30">

					<reliableSession ordered="true" reliableMessagingVersion="WSReliableMessaging11" flowControlEnabled="false" maxRetryCount="4" inactivityTimeout="00:01:00" />

					<security defaultAlgorithmSuite="Basic128" allowSerializedSigningTokenOnReply="true" authenticationMode="MutualCertificate" requireDerivedKeys="false" securityHeaderLayout="Lax" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false">
						<issuedTokenParameters keyType="SymmetricKey" />
						<secureConversationBootstrap />
					</security>
					<!-- As a service (when accepting messages from other access points wich MAY use MTOM encoding)
               this access point uses a custom encoder (which supports both MTOM and text encoding) -->
					<mixedContentTypeMessageEncoding messageVersion="Soap11WSAddressing10" writeEncoding="utf-8" />
					<httpsTransport authenticationScheme="Anonymous" hostNameComparisonMode="WeakWildcard" proxyAuthenticationScheme="Anonymous" />
          <!--<httpTransport authenticationScheme="Anonymous" hostNameComparisonMode="WeakWildcard" proxyAuthenticationScheme="Anonymous"/>-->
				</binding>
				<!-- END customBinding - HTTPS -->
			</customBinding>			
		</bindings>
		<!-- END - bindings -->
		<!-- START - Add reference to mixedContentTypeMessageEncoding -->
		<extensions>
			<bindingElementExtensions>
				<add name="mixedContentTypeMessageEncoding" type="STARTLibrary.src.eu.peppol.start.security.encoder.MixedContentTypeMessageEncodingExtensionElement, STARTLibrary" />
			</bindingElementExtensions>
		</extensions>
		<!-- END - Add reference to mixedContentTypeMessageEncoding -->
	</system.serviceModel>
	<!-- START - Cerficates webconfig -->
	<peppol.certificates configSource="Web.peppol.certificates.config" />
	<!-- END - Certificates webconfig -->
	<!-- START - Microsoft identityModel section -->
	<microsoft.identityModel>
		<service>
			<audienceUris mode="Never" />
			<certificateValidation certificateValidationMode="Custom">
				<certificateValidator type="STARTLibrary.src.eu.peppol.start.security.handler.AccessPointCertificateValidator, STARTLibrary" />
			</certificateValidation>
			<issuerNameRegistry type="STARTLibrary.src.eu.peppol.start.security.handler.AcceptingIssuerNameRegistry, STARTLibrary" />
		</service>
	</microsoft.identityModel>
	<!-- END - Microsoft identityModel section -->
</configuration>
